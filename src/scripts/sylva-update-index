#!/usr/bin/env python3

import glob
import argparse

from datetime import datetime

from sylva import Configuration, Folder
from sylva.devices import BAA500
from sylva.devices.Poleno import Poleno
from sylva.repositories import DevicesRepository, DatabaseRepository

configuration = Configuration()
device_repository = DevicesRepository()

parser = argparse.ArgumentParser(description="""Walks trough the storage directory and updates database index for all found files if file's meta data exist in database.""")

parser.add_argument("--storageDir", help="absolute path of directory where files should be stored; default is '{0}'".format(configuration.get_folders()[Folder.STORAGE.value]), action="store", required=False, default=configuration.get_folders()[Folder.STORAGE.value])

args = parser.parse_args()

database_repository = DatabaseRepository(configuration)

for filename in glob.iglob(args.storageDir + "/**/*.zip", recursive=True):
    # it's a ZIP file; try to get meta information out of it by passing it to device-specific implementations
    meta = BAA500(filename, device_repository).get_data_file_meta_data() or Poleno(filename, device_repository).get_data_file_meta_data()

    if meta is not None:
        # meta data is there; try to update record
        (matched, updated) = database_repository.update_by_storage_file(filename, meta)

        if matched and updated:
            print("{0} - OK - Meta data for file {1} updated.".format(datetime.now().isoformat(), filename))
        elif matched and not updated:
            print("{0} - OK - Meta data for file {1} is already up-to-date.".format(datetime.now().isoformat(), filename))
        else:
            print("{0} - ERROR - Could not find meta data for file {1}.".format(datetime.now().isoformat(), filename))

    else:
        print("{0} - ERROR - No device implementation found for file {1}.".format(datetime.now().isoformat(), filename))
